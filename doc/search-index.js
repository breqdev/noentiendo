var searchIndex = JSON.parse('{\
"libnoentiendo":{"doc":"noentiendo","t":[0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,4,4,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,13,3,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,3,3,8,13,8,3,13,13,3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,10,10,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,13,13,3,13,3,13,13,3,3,13,13,3,3,4,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,8,8,8,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,10,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,8,8,8,3,11,11,11,11,11,11,10,11,11,11,10,11,10,11,10,11,10,11,10,11,10,11,12,11,11,11,11,11,11,11,10,11,10,11,2,2,2,3,2,2,2,2,3,8,2,2,2,12,12,0,0,12,12,10,0,12,12,12,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["keyboard","memory","platform","roms","system","systems","A","Apostrophe","B","Backslash","Backspace","Backspace","C","CapsLock","CapsLock","Char","Comma","D","Delete","Delete","Digit0","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","DownArrow","DownArrow","E","End","End","Enter","Equals","Escape","Escape","F","F1","F1","F10","F10","F11","F11","F12","F12","F2","F2","F3","F3","F4","F4","F5","F5","F6","F6","F7","F7","F8","F8","F9","F9","G","Grave","H","Home","Home","I","Insert","Insert","J","K","KeyAdapter","KeyMappingStrategy","KeyPosition","KeyState","KeySymbol","L","LAlt","LAlt","LControl","LControl","LShift","LShift","LSuper","LSuper","LeftArrow","LeftArrow","LeftBracket","M","Menu","Menu","Minus","N","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","NumDivide","NumEnter","NumLock","NumLock","NumMinus","NumMultiply","NumPeriod","NumPlus","O","P","PageDown","PageDown","PageUp","PageUp","Pause","Pause","Period","Physical","PrintScreen","PrintScreen","Q","R","RAlt","RAlt","RControl","RControl","RShift","RShift","RSuper","RSuper","Return","RightArrow","RightArrow","RightBracket","S","ScrollLock","ScrollLock","Semicolon","Slash","Space","SymbolAdapter","Symbolic","T","Tab","U","UpArrow","UpArrow","V","W","X","Y","Z","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commodore","default","downcast","downcast","downcast","downcast","downcast","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from","get_hash","get_hash","hash","hash","into","into","into","into","into","is_pressed","map","map","new","press","pressed","release","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","0","A","Asterisk","At","B","C","C64KeyboardAdapter","C64Keys","C64SymbolAdapter","ClrHome","Colon","Comma","Commodore","Control","CursorLeftRight","CursorUpDown","D","Digit0","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","E","Equals","F","F1","F3","F5","F7","G","H","I","InsertDelete","J","K","L","LShift","LeftArrow","M","Minus","N","O","P","Period","Plus","Pound","Q","R","RShift","Return","RunStop","S","Semicolon","ShiftLock","Slash","Space","T","U","UpArrow","V","W","X","Y","Z","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","downcast","downcast","downcast","eq","equivalent","fmt","from","from","from","get_hash","hash","into","into","into","map","map","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","ActiveInterrupt","BankedMemory","BlockMemory","BranchMemory","DMA","IRQ","Memory","Mos6510Port","NMI","None","NullMemory","NullPort","Port","SystemInfo","bank","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cycle_count","cycles_per_second","default","default","default","default","dma","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","eq","equivalent","fmt","fmt","from","from","from","from","from","from","from","from","from_file","into","into","into","into","into","into","into","into","map","mos652x","new","new","new","new","new","poll","poll","poll","poll","poll","poll","poll","poll","ram","read","read","read","read","read","read","read","read","reset","reset","reset","reset","reset","reset","reset","reset","rom","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_warnings","with_warnings","write","write","write","write","write","write","write","write","Chained","ChainedCount","Cia","Count","InterruptRegister","None","Phi2","Pia","PortRegisters","Pulse","PulseCount","ShiftRegister","Timer","TimerClockSource","TimerOutput","Toggle","Via","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","from","from","from","from","from","from","from","from","from","interrupt_enable","into","into","into","into","into","into","into","into","into","is_enabled","new","new","new","new","new","new","poll","poll","poll","poll","poll","read","read","read","read","read_enable","read_flags","reset","reset","reset","reset","reset","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write","write","write","write_enable","AsyncPlatform","Color","Platform","PlatformProvider","SyncPlatform","TextPlatform","TextPlatformProvider","WindowConfig","WinitPlatform","WinitPlatformProvider","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","downcast","downcast","downcast","downcast","downcast","downcast","eq","eq","equivalent","fmt","fmt","from","from","from","from","from","from","get_hash","get_key_state","get_key_state","get_key_state","hash","input","input","input","into","into","into","into","into","into","new","new","new","new","new","new","print","print","print","provider","provider","provider","random","random","random","request_window","request_window","request_window","run","run","run","run_async","set_pixel","set_pixel","set_pixel","to_owned","to_owned","to_rgb","to_rgba","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","DiskLoadable","RomFile","borrow","borrow_mut","clone","clone_into","downcast","fmt","from","from_file","from_file","get_data","into","new","to_owned","try_from","try_into","type_id","upcast","vzip","InterruptHandler","MemoryIO","Stack","System","attach_dma","borrow","borrow_mut","downcast","from","get_info","interrupt","interrupt","into","new","pop","pop","pop_word","pop_word","push","push","push_word","push_word","read","read","read_word","read_word","registers","reset","tick","try_from","try_into","type_id","upcast","vzip","write","write","write_word","write_word","BrookeSystemFactory","C64SystemConfig","C64SystemFactory","C64SystemRoms","EasySystemFactory","KlausSystemFactory","PetSystemConfig","PetSystemFactory","PetSystemRoms","SystemFactory","Vic20SystemConfig","Vic20SystemFactory","Vic20SystemRoms","basic","basic","brooke","c64","character","character","create","easy","editor","kernal","kernal","klaus","pet","vic","BrookeSystemFactory","borrow","borrow_mut","create","downcast","from","into","try_from","try_into","type_id","upcast","vzip","C64BankSwitching","C64SystemConfig","C64SystemFactory","C64SystemRoms","basic","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","character","create","downcast","downcast","downcast","downcast","from","from","from","from","from_disk","into","into","into","into","kernal","mapping","new","poll","read","reset","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","write","EasySystemFactory","borrow","borrow_mut","create","downcast","from","into","try_from","try_into","type_id","upcast","vzip","KlausSystemFactory","borrow","borrow_mut","create","downcast","from","into","try_from","try_into","type_id","upcast","vzip","PetPia1PortA","PetPia1PortB","PetSystemConfig","PetSystemFactory","PetSystemRoms","basic","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","character","create","downcast","downcast","downcast","downcast","downcast","editor","from","from","from","from","from","from_disk","get_keyboard_row","into","into","into","into","into","kernal","mapping","new","new","poll","poll","read","read","reset","reset","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","write","write","Vic20SystemConfig","Vic20SystemFactory","Vic20SystemRoms","VicVia2PortA","VicVia2PortB","basic","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cartridge","character","create","downcast","downcast","downcast","downcast","downcast","from","from","from","from","from","from_disk","get_keyboard_col","into","into","into","into","into","kernal","mapping","new","new","poll","poll","read","read","reset","reset","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","write","write"],"q":["libnoentiendo","","","","","","libnoentiendo::keyboardlibnoentiendo::keyboard::KeySymbol","libnoentiendo::keyboard::commodore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::memory::mos652x","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::platform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::roms","","","","","","","","","","","","","","","","","","","","libnoentiendo::system","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::systems","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::systems::brooke","","","","","","","","","","","","libnoentiendo::systems::c64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::systems::easy","","","","","","","","","","","","libnoentiendo::systems::klaus","","","","","","","","","","","","libnoentiendo::systems::pet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::systems::vic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Various representations of keyboard scancodes are required …","A <code>memory::Memory</code> implementation can be read from and …","A <code>platform::Platform</code> consumes a system and runs it. …","ROM file loading and unloading is different on different …","A <code>system::System</code> consists of a 6502 CPU and some attached …","Systems are created by a <code>systems::SystemFactory</code>. A system …","","","","","","","","","","Alphanumeric or symbol keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a mapping from a key state of one type to a key …","Represents different approaches to mapping key states, to …","A representation for a position on a modern keyboard. …","A set of keys that are currently pressed. Parameter <code>T</code> is …","A representation for a symbol on a modern keyboard.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Preserve physical keys one-to-one. This is most …","","","","","","","","","","","","","","","","","","","","","","","An adapter that maps physical key positions to symbols.","Preserve symbols one-to-one. This is more intuitive, but …","","","","","","","","","","","","","","","","","","","","","","","","","Keys and adapters for the Commodore 64, VIC-20, and other …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the given key is currently pressed.","Map the current state of the keyboard with symbols of type …","","Creates a new, empty key state.","Adds a key to the set of pressed keys.","Return the set of pressed keys.","Removes a key from the set of pressed keys.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An adapter for mapping positions on a standard keyboard to …","Keys found on a VIC-20 or Commodore 64 keyboard.","An adapter for mapping symbols pressed on a standard …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Represents the state of the interrupts on the system.","Represents the memory banking features found in the …","Represents a simple block of contiguous memory, with no …","Maps several Memory objects into a single contiguous …","Represents a system component which may access the memory …","An IRQ (maskable interrupt request) is active.","Represents a contiguous block of memory which can be read, …","Represents the port built into a MOS 6510 processor, …","An NMI (non-maskable interrupt) is active.","No interrupts are active.","Memory that does nothing when read or written to.","A Port that does nothing.","A Port that can be read from, written to, reset, or polled …","Information about the system that Memory implementations …","Add a new memory implementation to the banked memory.","","","","","","","","","","","","","","","","","","","","","","","Handle DMA for the current instruction tick. …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a BlockMemory of the given size which loads its …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Map a new Memory object to the given starting address in …","The various interface adapters (6520, 6522, 6526) for the …","Create a new, empty banked memory.","Create a new MOS 6510 port with the given port.","Create a new BranchMemory with no mappings.","Create a new NullMemory that will not warn when read or …","Create a new NullPort that will not warn when read or …","Poll the port for interrupts. A port may trigger an …","Poll this memory to see if an interrupt has been triggered.","","","","","","","Create a BlockMemory of the given size which clears its …","Read a byte from the port. This is implementation-defined, …","Read a byte from this memory at the given address. …","","","","","","","Reset the port to its initial state, analogous to a system …","Reset this memory to its initial state, e.g. after a …","","","","","","","Create a BlockMemory of the given size which does not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new NullMemory that will warn when read or …","Create a new NullPort that will warn when read or written …","Write a byte to the port. This is implementation-defined.","Write a byte to this memory at the given address.","","","","","","","Count underflows of the other timer.","Count underflows of the other timer, but only if the CNT …","The MOS 6526 Complex Interface Adapter (CIA). Contains two …","Use pulses on the external CNT pin.","Registers for interrupt flags and interrupt enable bits. …","The timer will not output to the port.","Use the internal system clock.","The MOS 6520 Peripheral Interface Adapter (PIA), …","A port and its associated registers on the MOS 6522 VIA or …","The timer will output a single pulse on PB6 or PB7.","The timer will output a set number of pulses.","The shift register used by the MOS 6522 VIA and MOS 6526 …","A timer circuit on the MOS 6522 VIA or MOS 6526 CIA.","The source of the timer’s clock, which controls the rate …","The manner in which the timer will output signals to the …","The timer will toggle the output on PB6 or PB7.","The MOS 6522 Versatile Interface Adapter (VIA). Contains …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The current state of which interrupts are enabled. If a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is the specified interrupt enabled?","","Create a new PIA with the two given port implementations.","","","","","","","","Poll the underlying port for interrupts.","Poll the timer (decrement the counter, fire the interrupt …","","","","Read from the port, respecting the DDR.","Read the value of the interrupt enable register.","Read the apparent value of the interrupt register, based …","","","","Reset the port to its initial state.","Reset the shift register’s internal state.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write to the port, respecting the DDR.","Write to the interrupt enable register.","A platform which can be run asynchronously.","Represents an RGB color with 8 bits per channel.","A Platform provides platform-specific functionality to the …","","A platform which can be run synchronously.","Represents a platform which exclusively operates over text …","","Represents the configuration of a GUI window that the …","A platform implementation for desktop platforms using …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get the current state of the keyboard.","","","","Read a string input from the user, “out-of-band” from …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Display the given string to the user, “out-of-band” …","","","","","","Return a random number between 0 and 255. This exists as …","","","Request that the platform create a window of the specified …","","","","","","","Set the given pixel on the screen to the given color.","","","","","Convert the given color to a 32-bit integer, where the top …","Convert the given color to an array of 4 bytes, where the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a value which can be loaded from a file.","Represents a predefined, immutable ROM file. Useful for …","","","","","","","Returns the argument unchanged.","Creates a ROM file by loading the contents of a file.","","Returns the contents of the ROM file.","Calls <code>U::from(self)</code>.","Creates a new ROM file from the given data.","","","","","","","Handle interrupts by setting the applicable flags, pushing …","Read and write from the system’s memory.","Push and pop values from the stack.","The MOS 6502 CPU and its associated memory.","Attach a device which can perform DMA access.","","","","Returns the argument unchanged.","Return a SystemInfo struct containing the current system …","","","Calls <code>U::from(self)</code>.","","Pop a byte from the stack.","","Pop a word (little-endian) from the stack.","","Push a byte onto the stack.","","Push a word (little-endian) onto the stack.","","Read a byte from the given address in memory.","","Read a word (little-endian) from the given address in …","","","","Execute a single instruction.","","","","","","Write a byte to the given address in memory.","","Write a word (little-endian) to the given address in …","","","","","The set of ROM files required to run a Commodore 64 system.","","","","","The set of ROM files required to run a PET system.","A factory for creating a system from a set of ROM files …","","","","Basic ROM. Contains the BASIC interpreter.","Basic ROM. Contains the BASIC interpreter.","","","Character ROM. Used to generate the 8x8 character bitmaps.","Character ROM. Used to generate the 8x8 character bitmaps.","","","Editor ROM. Contains the screen editor functions.","Kernel ROM. Contains the operating system.","Kernal ROM. Contains the operating system.","","","","A system which only operates in text mode, for basic …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Bank switching implementation performed using the 6510’s …","Configuration for a Commodore 64 system.","The Commodore 64 system.","The set of ROM files required to run a Commodore 64 system.","Basic ROM. Contains the BASIC interpreter.","","","","","","","","","Character ROM. Used to generate the 8x8 character bitmaps.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Kernel ROM. Contains the operating system.","","","","","","","","","","","","","","","","","","","","","","","","","","","A port of the “Easy6502” system from …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","A system used to run Klaus Dormann’s 6502 CPU test suite.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Port A on the first PIA. This is used for generating the …","Port B on the first PIA. This is used for reading the …","Configuration for a Commodore PET system.","The Commodore PET system.","The set of ROM files required to run a PET system.","Basic ROM. Contains the BASIC interpreter.","","","","","","","","","","","Character ROM. Used to generate the 8x8 character bitmaps.","","","","","","","Editor ROM. Contains the screen editor functions.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Kernal ROM. Contains the operating system.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration for a VIC-20 system.","The VIC-20 system by Commodore.","The set of ROM files required to run a VIC-20 system.","Port A on the second VIA chip. This is used to read the …","Port B on the second VIA chip. This is used to set the …","Basic ROM. Contains the BASIC interpreter.","","","","","","","","","","","Cartridge ROM. Contains the contents of a cartridge, if …","Character ROM. Used to generate the 8x8 character bitmaps.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Load the ROM files from files.","Return a reference to the keyboard column’s current …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Kernal ROM. Contains the operating system and editor …","","","Create a new instance of the port, with the given keyboard …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],0,[[],[[5,[[0,[3,4]]]]]],[[]],[[]],[[]],[[]],[[]],[[1,1],6],[[2,2],6],[[],6],[[],6],[[1,7],8],[[2,7],8],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[1],[2],[[]],[[]],[[]],[[]],[[]],[[[5,[4]],4],6],[5,5],[5,[[5,[2]]]],[[],[[5,[4]]]],[[[5,[4]],4]],[[[5,[4]]],10],[[[5,[4]],4]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[14,14],[[]],[[]],[[]],[[]],[[14,14],6],[[],6],[[14,7],8],[[]],[[]],[[]],[[],9],[14],[[]],[[]],[[]],[5,[[5,[14]]]],[5,[[5,[14]]]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[15,[17,[16]]],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],18],[[],19],[[],20],[[],21],[[17,21]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[22,22],6],[[],6],[[22,7],8],[[21,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[23,24],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[18,23,[17,[16]]],18],0,[[[27,[[26,[23]]]]],15],[[[17,[28]]],29],[[],18],[[],19],[[],20],[21,6],[21,22],[[15,21],22],[[25,21],22],[[29,21],22],[[18,21],22],[[19,21],22],[[20,21],6],[23,25],[[],30],[31,30],[[15,31],30],[[25,31],30],[[29,31],30],[[18,31],30],[[19,31],30],[20,30],[[]],[[]],[15],[25],[29],[18],[19],[20],[23,25],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,19],[32,20],[30],[[31,30]],[[15,31,30]],[[25,31,30]],[[29,31,30]],[[18,31,30]],[[19,31,30]],[[20,30]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[33,30],6],[[[17,[28]],[17,[28]]],34],[[[17,[28]],[17,[28]]],35],[[[17,[28]],[17,[28]]],36],[[[17,[28]]],37],[[],38],[[],39],[[34,21],22],[[35,21],22],[[36,21],22],[[37,21],6],[[38,21],6],[[34,31],30],[[35,31],30],[[36,31],30],[37,30],[33,30],[[33,30],30],[34],[35],[36],[37],[39],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[34,31,30]],[[35,31,30]],[[36,31,30]],[[37,30]],[[33,30]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,40],[41,41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[40,40],6],[[41,41],6],[[],6],[[40,7],8],[[41,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],[[5,[1]]]],[42,[[5,[1]]]],[43,[[5,[1]]]],[40],[[],44],[42,44],[43,44],[[]],[[]],[[]],[[]],[[]],[[]],[6,45],[[],42],[[],46],[[[48,[[47,[[13,[41]]]]]],[48,[[47,[[13,[49]]]]]],[48,[[47,[6]]]],[48,[[47,[[5,[50]]]]]]],43],[[30,30,30],40],[[51,51,52],41],[32],[[42,32]],[[43,32]],[[],[[48,[53]]]],[45,[[48,[53]]]],[46,[[48,[53]]]],[[],30],[42,30],[43,30],[41],[[42,41]],[[43,41]],[54],[[45,54]],[[46,54]],[54,[[56,[[17,[55]]]]]],[[51,51,40]],[[42,51,51,40]],[[43,51,51,40]],[[]],[[]],[40,51],[40],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[24,24],[[]],[[]],[[24,7],8],[[]],[32],[32,24],[24,[[10,[30]]]],[[]],[[[10,[30]]],24],[[]],[[],11],[[],11],[[],12],[[],13],[[]],0,0,0,0,[[54,[17,[57]]]],[[]],[[]],[[]],[[]],[54,21],[[6,6]],[[54,6,6]],[[]],[[[17,[16]],9],54],[[],30],[54,30],[[],31],[54,31],[30],[[54,30]],[31],[[54,31]],[31,30],[[54,31],30],[31,31],[[54,31],31],0,[54],[54,52],[[],11],[[],11],[[],12],[[],13],[[]],[[31,30]],[[54,31,30]],[[31,31]],[[54,31,31]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[48,[53]]],54],0,0,0,0,0,0,0,0,[[]],[[]],[[24,[48,[53]]],54],[[]],[[]],[[]],[[],11],[[],11],[[],12],[[],13],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[58,59,[48,[53]]],54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],58],[[]],[[]],[[]],[[]],0,0,[[],60],[[60,21],6],[60,30],[60],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[60,30]],0,[[]],[[]],[[24,[48,[53]]],54],[[]],[[]],[[]],[[],11],[[],11],[[],12],[[],13],[[]],0,[[]],[[]],[[24,[48,[53]]],54],[[]],[[]],[[]],[[],11],[[],11],[[],12],[[],13],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[61,62,[48,[53]]],54],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[],61],[63,[[27,[[26,[30]]]]]],[[]],[[]],[[]],[[]],[[]],0,0,[[],63],[[[27,[[26,[30]]]],64,[48,[53]]],65],[[63,21],6],[[65,21],6],[63,30],[65,30],[63],[65],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[63,30]],[[65,30]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[66,67,[48,[53]]],54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[13,[32]]],66],[68,[[27,[[26,[30]]]]]],[[]],[[]],[[]],[[]],[[]],0,0,[[],68],[[[27,[[26,[30]]]],64,[48,[53]]],69],[[68,21],6],[[69,21],6],[68,30],[69,30],[68],[69],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[68,30]],[[69,30]]],"p":[[4,"KeyPosition"],[4,"KeySymbol"],[8,"Default"],[8,"PartialEq"],[3,"KeyState"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u64"],[3,"Vec"],[4,"Result"],[3,"TypeId"],[4,"Option"],[4,"C64Keys"],[3,"BankedMemory"],[8,"Memory"],[3,"Box"],[3,"BranchMemory"],[3,"NullMemory"],[3,"NullPort"],[3,"SystemInfo"],[4,"ActiveInterrupt"],[15,"usize"],[3,"RomFile"],[3,"BlockMemory"],[3,"Cell"],[3,"Rc"],[8,"Port"],[3,"Mos6510Port"],[15,"u8"],[15,"u16"],[15,"str"],[3,"InterruptRegister"],[3,"Cia"],[3,"Pia"],[3,"Via"],[3,"PortRegisters"],[3,"Timer"],[3,"ShiftRegister"],[3,"Color"],[3,"WindowConfig"],[3,"TextPlatformProvider"],[3,"WinitPlatformProvider"],[3,"String"],[3,"TextPlatform"],[3,"WinitPlatform"],[3,"Mutex"],[3,"Arc"],[3,"Pixels"],[4,"VirtualKeyCode"],[15,"u32"],[15,"f64"],[8,"PlatformProvider"],[3,"System"],[8,"Future"],[3,"Pin"],[8,"DMA"],[3,"C64SystemRoms"],[3,"C64SystemConfig"],[3,"C64BankSwitching"],[3,"PetSystemRoms"],[3,"PetSystemConfig"],[3,"PetPia1PortA"],[4,"KeyMappingStrategy"],[3,"PetPia1PortB"],[3,"Vic20SystemRoms"],[3,"Vic20SystemConfig"],[3,"VicVia2PortB"],[3,"VicVia2PortA"],[3,"SymbolAdapter"],[8,"KeyAdapter"],[13,"Char"],[3,"C64KeyboardAdapter"],[3,"C64SymbolAdapter"],[4,"TimerClockSource"],[4,"TimerOutput"],[8,"Platform"],[8,"SyncPlatform"],[8,"AsyncPlatform"],[8,"DiskLoadable"],[8,"InterruptHandler"],[8,"Stack"],[8,"MemoryIO"],[8,"SystemFactory"],[3,"BrookeSystemFactory"],[3,"C64SystemFactory"],[3,"EasySystemFactory"],[3,"KlausSystemFactory"],[3,"PetSystemFactory"],[3,"Vic20SystemFactory"]]},\
"noentiendo_desktop":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,12,12,11,11,11,11,11,11,11],"n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","downcast","fmt","from","from_arg_matches","from_arg_matches_mut","into","into_app","into_app_for_update","key_mapping","main","platform","rom_path","system","try_from","try_into","type_id","upcast","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":["noentiendo_desktop","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2],"f":[0,[1,1],[1,1],[[]],[[]],[[]],[[2,3],4],[[]],[5,[[7,[2,6]]]],[5,[[7,[2,6]]]],[[]],[[],1],[[],1],0,[[]],0,0,0,[[],7],[[],7],[[],8],[[],9],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],[[]]],"p":[[6,"Command"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Error"],[4,"Result"],[3,"TypeId"],[4,"Option"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
