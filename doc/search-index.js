var searchIndex = JSON.parse('{\
"libnoentiendo":{"doc":"noentiendo","tn":["keyboard","memory","platform","roms","system","systems","A","Apostrophe","B","Backslash","Backspace","Backspace","C","CapsLock","CapsLock","Char","Comma","D","Delete","Delete","Digit0","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","DownArrow","DownArrow","E","End","End","Enter","Equals","Escape","Escape","F","F1","F1","F10","F10","F11","F11","F12","F12","F2","F2","F3","F3","F4","F4","F5","F5","F6","F6","F7","F7","F8","F8","F9","F9","G","Grave","H","Home","Home","I","Insert","Insert","J","K","KeyAdapter","KeyMappingStrategy","KeyPosition","KeyState","KeySymbol","L","LAlt","LAlt","LControl","LControl","LShift","LShift","LSuper","LSuper","LeftArrow","LeftArrow","LeftBracket","M","Menu","Menu","Minus","N","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","NumDivide","NumEnter","NumLock","NumLock","NumMinus","NumMultiply","NumPeriod","NumPlus","O","P","PageDown","PageDown","PageUp","PageUp","Pause","Pause","Period","Physical","PrintScreen","PrintScreen","Q","R","RAlt","RAlt","RControl","RControl","RShift","RShift","RSuper","RSuper","Return","RightArrow","RightArrow","RightBracket","S","ScrollLock","ScrollLock","Semicolon","Slash","Space","SymbolAdapter","Symbolic","T","Tab","U","UpArrow","UpArrow","V","W","X","Y","Z","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","downcast","downcast","downcast","downcast","downcast","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from","get_hash","get_hash","hash","hash","into","into","into","into","into","is_pressed","map","map","new","press","pressed","release","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","0","ActiveInterrupt","BlockMemory","BranchMemory","DMA","IRQ","Memory","NMI","None","NullMemory","NullPort","Port","SystemInfo","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cycle_count","cycles_per_second","default","default","default","dma","downcast","downcast","downcast","downcast","downcast","eq","equivalent","fmt","fmt","from","from","from","from","from","from_file","into","into","into","into","into","map","new","new","pia","poll","poll","poll","poll","ports","ram","read","read","read","read","reset","reset","reset","reset","rom","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","via","vzip","vzip","vzip","vzip","vzip","with_warnings","write","write","write","write","PIA","borrow","borrow_mut","control_bits","downcast","from","into","new","poll","read","reset","try_from","try_into","type_id","upcast","vzip","write","C1_ACTIVE_TRANSITION_FLAG","C1_CONTROL","C2_ACTIVE_TRANSITION_FLAG","C2_CONTROL","C2_DIRECTION","DDR_SELECT","NullPort","Port","borrow","borrow_mut","default","downcast","from","into","new","poll","poll","read","read","reset","reset","try_from","try_into","type_id","upcast","vzip","with_warnings","write","write","VIA","borrow","borrow_mut","downcast","from","ier_bits","into","new","poll","read","reset","sr_control_bits","try_from","try_into","type_id","upcast","vzip","write","CA1_ENABLE","CA2_ENABLE","CB1_ENABLE","CB2_ENABLE","MASTER","SR_ENABLE","T1_ENABLE","T2_ENABLE","C1_ACTIVE_TRANSITION_FLAG","C1_CONTROL","C2_ACTIVE_TRANSITION_FLAG","C2_CONTROL","C2_DIRECTION","DDR_SELECT","SHIFT_DISABLED","SHIFT_IN_BY_EXTERNAL_CLOCK","SHIFT_IN_BY_SYSTEM_CLOCK","SHIFT_IN_BY_T2","SHIFT_OUT_BY_EXTERNAL_CLOCK","SHIFT_OUT_BY_SYSTEM_CLOCK","SHIFT_OUT_BY_T2","SHIFT_OUT_FREE_RUN","AsyncPlatform","Color","Platform","PlatformProvider","SyncPlatform","TextPlatform","TextPlatformProvider","WindowConfig","WinitPlatform","WinitPlatformProvider","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","downcast","downcast","downcast","downcast","downcast","downcast","eq","eq","equivalent","fmt","fmt","from","from","from","from","from","from","get_hash","get_key_state","get_key_state","get_key_state","hash","input","input","input","into","into","into","into","into","into","new","new","new","new","new","new","print","print","print","provider","provider","provider","random","random","random","request_window","request_window","request_window","run","run","run","run_async","set_pixel","set_pixel","set_pixel","to_owned","to_owned","to_rgb","to_rgba","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","DiskLoadable","RomFile","borrow","borrow_mut","downcast","from","from_file","from_file","get_data","into","new","try_from","try_into","type_id","upcast","vzip","InterruptHandler","MemoryIO","Stack","System","attach_dma","borrow","borrow_mut","downcast","from","get_info","interrupt","interrupt","into","new","pop","pop","pop_word","pop_word","push","push","push_word","push_word","read","read","read_word","read_word","registers","reset","tick","try_from","try_into","type_id","upcast","vzip","write","write","write_word","write_word","BrookeSystemFactory","EasySystemFactory","KlausSystemFactory","PetSystemFactory","PetSystemRoms","SystemFactory","Vic20SystemFactory","Vic20SystemRoms","basic","brooke","character","create","easy","editor","kernal","klaus","pet","vic","BrookeSystemFactory","borrow","borrow_mut","create","downcast","from","into","try_from","try_into","type_id","upcast","vzip","EasySystemFactory","borrow","borrow_mut","create","downcast","from","into","try_from","try_into","type_id","upcast","vzip","KlausSystemFactory","borrow","borrow_mut","create","downcast","from","into","try_from","try_into","type_id","upcast","vzip","PetPia1PortA","PetPia1PortB","PetSystemConfig","PetSystemFactory","PetSystemRoms","basic","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","character","create","downcast","downcast","downcast","downcast","downcast","editor","from","from","from","from","from","from_disk","get_keyboard_row","into","into","into","into","into","kernal","mapping","new","new","poll","poll","read","read","reset","reset","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","write","write","Vic20SystemConfig","Vic20SystemFactory","Vic20SystemRoms","VicVia2PortA","VicVia2PortB","basic","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cartridge","character","create","downcast","downcast","downcast","downcast","downcast","from","from","from","from","from","from_disk","get_keyboard_col","into","into","into","into","into","kernal","mapping","new","new","poll","poll","read","read","reset","reset","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","write","write"],"q":["libnoentiendo","","","","","","libnoentiendo::keyboardlibnoentiendo::keyboard::KeySymbol","libnoentiendo::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::memory::pia","","","","","","","","","","","","","","","","","libnoentiendo::memory::pia::control_bits","","","","","","libnoentiendo::memory::ports","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::memory::via","","","","","","","","","","","","","","","","","","libnoentiendo::memory::via::ier_bits","","","","","","","","libnoentiendo::memory::via::sr_control_bits","","","","","","","","","","","","","","libnoentiendo::platform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::roms","","","","","","","","","","","","","","","","libnoentiendo::system","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::systems","","","","","","","","","","","","","","","","","","libnoentiendo::systems::brooke","","","","","","","","","","","","libnoentiendo::systems::easy","","","","","","","","","","","","libnoentiendo::systems::klaus","","","","","","","","","","","","libnoentiendo::systems::pet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::systems::vic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Various representations of keyboard scancodes are required …","A <code>memory::Memory</code> implementation can be read from and …","A <code>platform::Platform</code> consumes a system and runs it. …","ROM file loading and unloading is different on different …","A <code>system::System</code> consists of a 6502 CPU and some attached …","Systems are created by a <code>systems::SystemFactory</code>. A system …","","","","","","","","","","Alphanumeric or symbol keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a mapping from a key state of one type to a key …","Represents different approaches to mapping key states, to …","A representation for a position on a modern keyboard. …","A set of keys that are currently pressed. Parameter <code>T</code> is …","A representation for a symbol on a modern keyboard.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Preserve physical keys one-to-one. This is most …","","","","","","","","","","","","","","","","","","","","","","","An adapter that maps physical key positions to symbols.","Preserve symbols one-to-one. This is more intuitive, but …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the given key is currently pressed.","Map the current state of the keyboard with symbols of type …","","Creates a new, empty key state.","Adds a key to the set of pressed keys.","Return the set of pressed keys.","Removes a key from the set of pressed keys.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents the state of the interrupts on the system.","Represents a simple block of contiguous memory, with no …","Maps several Memory objects into a single contiguous …","Represents a system component which may access the memory …","An IRQ (maskable interrupt request) is active.","Represents a contiguous block of memory which can be read, …","An NMI (non-maskable interrupt) is active.","No interrupts are active.","Memory that does nothing when read or written to.","","","Information about the system that Memory implementations …","","","","","","","","","","","","","","","","Handle DMA for the current instruction tick. …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a BlockMemory of the given size which loads its …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Map a new Memory object to the given starting address in …","Create a new BranchMemory with no mappings.","Create a new NullMemory that will not warn when read or …","","Poll this memory to see if an interrupt has been triggered.","","","","","Create a BlockMemory of the given size which clears its …","Read a byte from this memory at the given address. …","","","","Reset this memory to its initial state, e.g. after a …","","","","Create a BlockMemory of the given size which does not …","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new NullMemory that will warn when read or …","Write a byte to this memory at the given address.","","","","A MOS 6520 PIA, containing two ports.","","","The meanings of each bit in the control register.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new PIA with the two given port implementations.","","","","","","","","","","","","","","","","A Port that does nothing.","A Port that can be read from, written to, reset, or polled …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new NullPort that will not warn when read or …","Poll the port for interrupts. A port may trigger an …","","Read a byte from the port. This is implementation-defined, …","","Reset the port to its initial state, analogous to a system …","","","","","","","Create a new NullPort that will warn when read or written …","Write a byte to the port. This is implementation-defined.","","The MOS 6522 Versatile Interface Adapter (VIA).","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A platform which can be run asynchronously.","Represents an RGB color with 8 bits per channel.","A Platform provides platform-specific functionality to the …","","A platform which can be run synchronously.","Represents a platform which exclusively operates over text …","","Represents the configuration of a GUI window that the …","A platform implementation for desktop platforms using …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get the current state of the keyboard.","","","","Read a string input from the user, “out-of-band” from …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Display the given string to the user, “out-of-band” …","","","","","","Return a random number between 0 and 255. This exists as …","","","Request that the platform create a window of the specified …","","","","","","","Set the given pixel on the screen to the given color.","","","","","Convert the given color to a 32-bit integer, where the top …","Convert the given color to an array of 4 bytes, where the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a predefined, immutable ROM file. Useful for …","","","","Returns the argument unchanged.","","","Returns the contents of the ROM file.","Calls <code>U::from(self)</code>.","","","","","","","Handle interrupts by setting the applicable flags, pushing …","Read and write from the system’s memory.","Push and pop values from the stack.","The MOS 6502 CPU and its associated memory.","Attach a device which can perform DMA access.","","","","Returns the argument unchanged.","Return a SystemInfo struct containing the current system …","","","Calls <code>U::from(self)</code>.","","Pop a byte from the stack.","","Pop a word (little-endian) from the stack.","","Push a byte onto the stack.","","Push a word (little-endian) onto the stack.","","Read a byte from the given address in memory.","","Read a word (little-endian) from the given address in …","","","","Execute a single instruction.","","","","","","Write a byte to the given address in memory.","","Write a word (little-endian) to the given address in …","","","","","","The set of ROM files required to run a PET system.","A factory for creating a system from a set of ROM files …","","","Basic ROM. Contains the BASIC interpreter.","","Character ROM. Used to generate the 8x8 character bitmaps.","","","Editor ROM. Contains the screen editor functions.","Kernal ROM. Contains the operating system.","","","","A system which only operates in text mode, for basic …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","A port of the “Easy6502” system from …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","A system used to run Klaus Dormann’s 6502 CPU test suite.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Port A on the first PIA. This is used for generating the …","Port B on the first PIA. This is used for reading the …","Configuration for a Commodore PET system.","The Commodore PET system.","The set of ROM files required to run a PET system.","Basic ROM. Contains the BASIC interpreter.","","","","","","","","","","","Character ROM. Used to generate the 8x8 character bitmaps.","","","","","","","Editor ROM. Contains the screen editor functions.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Kernal ROM. Contains the operating system.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration for a VIC-20 system.","The VIC-20 system by Commodore.","The set of ROM files required to run a VIC-20 system.","Port A on the second VIA chip. This is used to read the …","Port B on the second VIA chip. This is used to set the …","Basic ROM. Contains the BASIC interpreter.","","","","","","","","","","","Cartridge ROM. Contains the contents of a cartridge, if …","Character ROM. Used to generate the 8x8 character bitmaps.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Load the ROM files from files.","Return a reference to the keyboard column’s current …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Kernal ROM. Contains the operating system and editor …","","","Create a new instance of the port, with the given keyboard …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,1,1,1,2,1,1,2,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,1,1,2,1,1,2,1,1,0,0,0,0,0,1,1,2,1,2,1,2,1,2,1,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,2,1,2,1,53,1,2,1,1,1,2,1,2,1,2,1,2,2,1,2,1,1,1,2,1,1,1,0,53,1,1,1,1,2,1,1,1,1,1,59,53,1,2,5,59,53,1,2,5,1,2,1,2,5,59,53,1,2,5,1,2,1,2,1,2,59,53,1,2,5,1,2,1,2,59,53,1,2,5,5,60,59,5,5,5,5,1,2,59,53,1,2,5,59,53,1,2,5,59,53,1,2,5,59,53,1,2,5,59,53,1,2,5,61,0,0,0,0,18,0,18,18,0,0,0,0,21,14,15,18,16,21,14,15,18,16,16,16,14,15,16,47,21,14,15,18,16,18,18,18,16,21,14,15,18,16,21,21,14,15,18,16,14,14,15,0,22,21,14,15,0,21,22,21,14,15,22,21,14,15,21,21,14,15,18,16,21,14,15,18,16,21,14,15,18,16,21,14,15,18,16,0,21,14,15,18,16,15,22,21,14,15,0,27,27,0,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,28,28,28,28,28,28,28,26,28,26,28,26,28,28,28,28,28,28,28,26,28,0,29,29,29,29,0,29,29,29,29,29,0,29,29,29,29,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,32,36,33,30,31,35,32,36,33,30,31,30,31,30,31,35,32,36,33,30,31,30,31,30,30,31,35,32,36,33,30,31,30,43,32,33,30,43,32,33,35,32,36,33,30,31,35,32,36,33,30,31,43,32,33,62,35,36,43,32,33,43,32,33,63,35,36,64,43,32,33,30,31,30,30,35,32,36,33,30,31,35,32,36,33,30,31,35,32,36,33,30,31,35,32,36,33,30,31,35,32,36,33,30,31,0,0,20,20,20,20,65,20,20,20,20,20,20,20,20,20,0,0,0,0,44,44,44,44,44,44,66,44,44,44,67,44,67,44,67,44,67,44,68,44,68,44,44,44,44,44,44,44,44,44,68,44,68,44,0,0,0,0,0,0,0,0,48,0,48,69,0,48,48,0,0,0,0,70,70,70,70,70,70,70,70,70,70,70,0,71,71,71,71,71,71,71,71,71,71,71,0,72,72,72,72,72,72,72,72,72,72,72,0,0,0,0,0,48,48,50,54,49,73,48,50,54,49,73,48,73,48,50,54,49,73,48,48,50,54,49,73,48,50,48,50,54,49,73,48,49,50,54,50,54,50,54,50,54,48,50,54,49,73,48,50,54,49,73,48,50,54,49,73,48,50,54,49,73,48,50,54,49,73,50,54,0,0,0,0,0,55,55,57,58,56,74,55,57,58,56,74,55,55,74,55,57,58,56,74,55,57,58,56,74,55,57,55,57,58,56,74,55,56,57,58,57,58,57,58,57,58,55,57,58,56,74,55,57,58,56,74,55,57,58,56,74,55,57,58,56,74,55,57,58,56,74,57,58],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[],[[5,[[0,[3,4]]]]]],[[]],[[]],[[]],[[]],[[]],[[1,1],6],[[2,2],6],[[],6],[[],6],[[1,7],8],[[2,7],8],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[1],[2],[[]],[[]],[[]],[[]],[[]],[[[5,[4]],4],6],[5,5],[5,[[5,[2]]]],[[],[[5,[4]]]],[[[5,[4]],4]],[[[5,[4]]],10],[[[5,[4]],4]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],14],[[],15],[[],16],[[17,16]],[[]],[[]],[[]],[[]],[[]],[[18,18],6],[[],6],[[18,7],8],[[16,7],8],[[]],[[]],[[]],[[]],[[]],[[19,20],21],[[]],[[]],[[]],[[]],[[]],[[14,19,[17,[22]]],14],[[],14],[[],15],0,[16,18],[[21,16],18],[[14,16],18],[[15,16],18],0,[19,21],[23,24],[[21,23],24],[[14,23],24],[[15,23],24],[[]],[21],[14],[15],[19,21],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],0,[[]],[[]],[[]],[[]],[[]],[25,15],[[23,24]],[[21,23,24]],[[14,23,24]],[[15,23,24]],0,[[]],[[]],0,[[]],[[]],[[]],[[[17,[26]],[17,[26]]],27],[[27,16],18],[[27,23],24],[27],[[],11],[[],11],[[],12],[[],13],[[]],[[27,23,24]],0,0,0,0,0,0,0,0,[[]],[[]],[[],28],[[]],[[]],[[]],[[],28],[16,6],[[28,16],6],[[],24],[28,24],[[]],[28],[[],11],[[],11],[[],12],[[],13],[[]],[25,28],[24],[[28,24]],0,[[]],[[]],[[]],[[]],0,[[]],[[[17,[26]],[17,[26]]],29],[[29,16],18],[[29,23],24],[29],0,[[],11],[[],11],[[],12],[[],13],[[]],[[29,23,24]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,30],[31,31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[30,30],6],[[31,31],6],[[],6],[[30,7],8],[[31,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],[[5,[1]]]],[32,[[5,[1]]]],[33,[[5,[1]]]],[30],[[],34],[32,34],[33,34],[[]],[[]],[[]],[[]],[[]],[[]],[6,35],[[],32],[[],36],[[[38,[[37,[[13,[31]]]]]],[38,[[37,[[13,[39]]]]]],[38,[[37,[6]]]],[38,[[37,[[5,[40]]]]]]],33],[[24,24,24],30],[[41,41,42],31],[25],[[32,25]],[[33,25]],[[],[[38,[43]]]],[35,[[38,[43]]]],[36,[[38,[43]]]],[[],24],[32,24],[33,24],[31],[[32,31]],[[33,31]],[44],[[35,44]],[[36,44]],[44,[[46,[[17,[45]]]]]],[[41,41,30]],[[32,41,41,30]],[[33,41,41,30]],[[]],[[]],[30,41],[30],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[25],[25,20],[20,[[10,[24]]]],[[]],[[[10,[24]]],20],[[],11],[[],11],[[],12],[[],13],[[]],0,0,0,0,[[44,[17,[47]]]],[[]],[[]],[[]],[[]],[44,16],[[6,6]],[[44,6,6]],[[]],[[[17,[22]],9],44],[[],24],[44,24],[[],23],[44,23],[24],[[44,24]],[23],[[44,23]],[23,24],[[44,23],24],[23,23],[[44,23],23],0,[44],[44,42],[[],11],[[],11],[[],12],[[],13],[[]],[[23,24]],[[44,23,24]],[[23,23]],[[44,23,23]],0,0,0,0,0,0,0,0,0,0,0,[[[38,[43]]],44],0,0,0,0,0,0,0,[[]],[[]],[[20,[38,[43]]],44],[[]],[[]],[[]],[[],11],[[],11],[[],12],[[],13],[[]],0,[[]],[[]],[[20,[38,[43]]],44],[[]],[[]],[[]],[[],11],[[],11],[[],12],[[],13],[[]],0,[[]],[[]],[[20,[38,[43]]],44],[[]],[[]],[[]],[[],11],[[],11],[[],12],[[],13],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[48,49,[38,[43]]],44],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[],48],[50,[[52,[[51,[24]]]]]],[[]],[[]],[[]],[[]],[[]],0,0,[[],50],[[[52,[[51,[24]]]],53,[38,[43]]],54],[[50,16],6],[[54,16],6],[50,24],[54,24],[50],[54],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[50,24]],[[54,24]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[55,56,[38,[43]]],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[13,[25]]],55],[57,[[52,[[51,[24]]]]]],[[]],[[]],[[]],[[]],[[]],0,0,[[],57],[[[52,[[51,[24]]]],53,[38,[43]]],58],[[57,16],6],[[58,16],6],[57,24],[58,24],[57],[58],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[57,24]],[[58,24]]],"p":[[4,"KeyPosition"],[4,"KeySymbol"],[8,"Default"],[8,"PartialEq"],[3,"KeyState"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u64"],[3,"Vec"],[4,"Result"],[3,"TypeId"],[4,"Option"],[3,"BranchMemory"],[3,"NullMemory"],[3,"SystemInfo"],[3,"Box"],[4,"ActiveInterrupt"],[15,"usize"],[3,"RomFile"],[3,"BlockMemory"],[8,"Memory"],[15,"u16"],[15,"u8"],[15,"str"],[8,"Port"],[3,"PIA"],[3,"NullPort"],[3,"VIA"],[3,"Color"],[3,"WindowConfig"],[3,"TextPlatformProvider"],[3,"WinitPlatformProvider"],[3,"String"],[3,"TextPlatform"],[3,"WinitPlatform"],[3,"Mutex"],[3,"Arc"],[3,"Pixels"],[4,"VirtualKeyCode"],[15,"u32"],[15,"f64"],[8,"PlatformProvider"],[3,"System"],[8,"Future"],[3,"Pin"],[8,"DMA"],[3,"PetSystemRoms"],[3,"PetSystemConfig"],[3,"PetPia1PortA"],[3,"Cell"],[3,"Rc"],[4,"KeyMappingStrategy"],[3,"PetPia1PortB"],[3,"Vic20SystemRoms"],[3,"Vic20SystemConfig"],[3,"VicVia2PortB"],[3,"VicVia2PortA"],[3,"SymbolAdapter"],[8,"KeyAdapter"],[13,"Char"],[8,"Platform"],[8,"SyncPlatform"],[8,"AsyncPlatform"],[8,"DiskLoadable"],[8,"InterruptHandler"],[8,"Stack"],[8,"MemoryIO"],[8,"SystemFactory"],[3,"BrookeSystemFactory"],[3,"EasySystemFactory"],[3,"KlausSystemFactory"],[3,"PetSystemFactory"],[3,"Vic20SystemFactory"]]},\
"noentiendo_desktop":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,12,12,11,11,11,11,11,11,11],"n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","downcast","fmt","from","from_arg_matches","from_arg_matches_mut","into","into_app","into_app_for_update","key_mapping","main","platform","rom_path","system","try_from","try_into","type_id","upcast","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":["noentiendo_desktop","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2],"f":[0,[1,1],[1,1],[[]],[[]],[[]],[[2,3],4],[[]],[5,[[7,[2,6]]]],[5,[[7,[2,6]]]],[[]],[[],1],[[],1],0,[[]],0,0,0,[[],7],[[],7],[[],8],[[],9],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],[[]]],"p":[[6,"Command"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Error"],[4,"Result"],[3,"TypeId"],[4,"Option"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
