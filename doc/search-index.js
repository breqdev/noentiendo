var searchIndex = JSON.parse('{\
"libnoentiendo":{"doc":"noentiendo","t":[0,0,0,0,0,4,3,3,13,8,13,13,3,2,2,3,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,11,11,0,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,10,11,11,11,3,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,3,8,11,11,11,11,11,11,10,11,10,11,10,11,11,11,11,11,11,11,10,11,3,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,8,3,8,8,8,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,10,11,11,10,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,8,3,11,11,11,11,10,11,11,11,11,11,11,11,11,11,8,8,8,3,11,11,11,11,11,10,11,11,11,10,11,10,11,10,11,10,11,10,11,10,11,12,11,11,11,11,11,11,11,10,11,10,11,2,2,2,2,2,8,2,2,0,10,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["memory","platform","roms","system","systems","ActiveInterrupt","BlockMemory","BranchMemory","IRQ","Memory","NMI","None","NullMemory","NullPort","Port","SystemInfo","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cycle_count","cycles_per_second","downcast","downcast","downcast","downcast","downcast","from","from","from","from","from","from_file","into","into","into","into","into","map","new","new","pia","poll","poll","poll","poll","ports","ram","read","read","read","read","reset","reset","reset","reset","rom","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","via","vzip","vzip","vzip","vzip","vzip","with_warnings","write","write","write","write","PIA","borrow","borrow_mut","control_bits","downcast","from","into","new","poll","read","reset","try_from","try_into","type_id","upcast","vzip","write","C1_ACTIVE_TRANSITION_FLAG","C1_CONTROL","C2_ACTIVE_TRANSITION_FLAG","C2_CONTROL","C2_DIRECTION","DDR_SELECT","NullPort","Port","borrow","borrow_mut","downcast","from","into","new","poll","poll","read","read","reset","reset","try_from","try_into","type_id","upcast","vzip","with_warnings","write","write","VIA","borrow","borrow_mut","downcast","from","into","new","poll","read","reset","sr_control_bits","try_from","try_into","type_id","upcast","vzip","write","C1_ACTIVE_TRANSITION_FLAG","C1_CONTROL","C2_ACTIVE_TRANSITION_FLAG","C2_CONTROL","C2_DIRECTION","DDR_SELECT","SHIFT_DISABLED","SHIFT_IN_BY_EXTERNAL_CLOCK","SHIFT_IN_BY_SYSTEM_CLOCK","SHIFT_IN_BY_T2","SHIFT_OUT_BY_EXTERNAL_CLOCK","SHIFT_OUT_BY_SYSTEM_CLOCK","SHIFT_OUT_BY_T2","SHIFT_OUT_FREE_RUN","AsyncPlatform","Color","Platform","PlatformProvider","SyncPlatform","TextPlatform","TextPlatformProvider","WindowConfig","WinitPlatform","WinitPlatformProvider","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","downcast","downcast","downcast","downcast","downcast","downcast","eq","eq","fmt","fmt","from","from","from","from","from","from","get_last_key","get_last_key","get_last_key","input","input","input","into","into","into","into","into","into","is_pressed","is_pressed","is_pressed","new","new","new","new","new","new","print","print","print","provider","provider","provider","random","random","random","request_window","request_window","request_window","run","run","run","run_async","scancodes","set_pixel","set_pixel","set_pixel","to_owned","to_owned","to_rgb","to_rgba","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","BACKSPACE","COMMODORE","CONTROL","DOWN_ARROW","F1","F2","F3","F4","F5","F6","F7","F8","HOME","LEFT_ARROW","LSHIFT","LSUPER","RETURN","RIGHT_ARROW","RSHIFT","RSUPER","RUN_STOP","UP_ARROW","DiskLoadable","RomFile","borrow","borrow_mut","downcast","from","from_file","from_file","get_data","into","new","try_from","try_into","type_id","upcast","vzip","InterruptHandler","MemoryIO","Stack","System","borrow","borrow_mut","downcast","from","get_info","interrupt","interrupt","into","new","pop","pop","pop_word","pop_word","push","push","push_word","push_word","read","read","read_word","read_word","registers","reset","tick","try_from","try_into","type_id","upcast","vzip","write","write","write_word","write_word","BrookeSystemFactory","EasySystemFactory","KlausSystemFactory","PetSystemFactory","PetSystemRoms","SystemFactory","Vic20SystemFactory","Vic20SystemRoms","brooke","create","easy","klaus","pet","vic","BrookeSystemFactory","borrow","borrow_mut","create","downcast","from","into","try_from","try_into","type_id","upcast","vzip","EasySystemFactory","borrow","borrow_mut","create","downcast","from","into","try_from","try_into","type_id","upcast","vzip","KlausSystemFactory","borrow","borrow_mut","create","downcast","from","into","try_from","try_into","type_id","upcast","vzip","PetPia1PortA","PetPia1PortB","PetSystemFactory","PetSystemRoms","PetVram","basic","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","character","create","downcast","downcast","downcast","downcast","downcast","editor","from","from","from","from","from","from_disk","get_keyboard_row","into","into","into","into","into","kernal","new","new","new","poll","poll","poll","read","read","read","reset","reset","reset","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","write","write","write","Vic20SystemFactory","Vic20SystemRoms","VicVia2PortA","VicVia2PortB","basic","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","character","create","downcast","downcast","downcast","downcast","from","from","from","from","from_disk","get_keyboard_col","into","into","into","into","kernal","new","new","poll","poll","read","read","reset","reset","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","write","write"],"q":["libnoentiendo","","","","","libnoentiendo::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::memory::pia","","","","","","","","","","","","","","","","","libnoentiendo::memory::pia::control_bits","","","","","","libnoentiendo::memory::ports","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::memory::via","","","","","","","","","","","","","","","","","libnoentiendo::memory::via::sr_control_bits","","","","","","","","","","","","","","libnoentiendo::platform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::platform::scancodes","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::roms","","","","","","","","","","","","","","","","libnoentiendo::system","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::systems","","","","","","","","","","","","","","libnoentiendo::systems::brooke","","","","","","","","","","","","libnoentiendo::systems::easy","","","","","","","","","","","","libnoentiendo::systems::klaus","","","","","","","","","","","","libnoentiendo::systems::pet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libnoentiendo::systems::vic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Represents the state of the interrupts on the system.","Represents a simple block of contiguous memory, with no …","Maps several Memory objects into a single contiguous …","An IRQ (maskable interrupt request) is active.","Represents a contiguous block of memory which can be read, …","An NMI (non-maskable interrupt) is active.","No interrupts are active.","Memory that does nothing when read or written to.","","","Information about the system that Memory implementations …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a BlockMemory of the given size which loads its …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Map a new Memory object to the given starting address in …","Create a new BranchMemory with no mappings.","Create a new NullMemory that will not warn when read or …","","Poll this memory to see if an interrupt has been triggered.","","","","","Create a BlockMemory of the given size which clears its …","Read a byte from this memory at the given address. …","","","","Reset this memory to its initial state, e.g. after a …","","","","Create a BlockMemory of the given size which does not …","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new NullMemory that will warn when read or …","Write a byte to this memory at the given address.","","","","A MOS 6520 PIA, containing two ports.","","","The meanings of each bit in the control register.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new PIA with the two given port implementations.","","","","","","","","","","","","","","","","A Port that does nothing.","A Port that can be read from, written to, reset, or polled …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new NullPort that will not warn when read or …","Poll the port for interrupts. A port may trigger an …","","Read a byte from the port. This is implementation-defined, …","","Reset the port to its initial state, analogous to a system …","","","","","","","Create a new NullPort that will warn when read or written …","Write a byte to the port. This is implementation-defined.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","A platform which can be run asynchronously.","Represents an RGB color with 8 bits per channel.","A Platform provides platform-specific functionality to the …","","A platform which can be run synchronously.","Represents a platform which exclusively operates over text …","","Represents the configuration of a GUI window that the …","A platform implementation for desktop platforms using …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the most recent key that the user pressed.","","","Read a string input from the user, “out-of-band” from …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if the key corresponding to the specified ASCII code …","","","","","","","","","Display the given string to the user, “out-of-band” …","","","","","","Return a random number between 0 and 255. This exists as …","","","Request that the platform create a window of the specified …","","","","","","","","Set the given pixel on the screen to the given color.","","","","","Convert the given color to a 32-bit integer, where the top …","Convert the given color to an array of 4 bytes, where the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a predefined, immutable ROM file. Useful for …","","","","Returns the argument unchanged.","","","Returns the contents of the ROM file.","Calls <code>U::from(self)</code>.","","","","","","","Handle interrupts by setting the applicable flags, pushing …","Read and write from the system’s memory.","Push and pop values from the stack.","The MOS 6502 CPU and its associated memory.","","","","Returns the argument unchanged.","Return a SystemInfo struct containing the current system …","","","Calls <code>U::from(self)</code>.","","Pop a byte from the stack.","","Pop a word (little-endian) from the stack.","","Push a byte onto the stack.","","Push a word (little-endian) onto the stack.","","Read a byte from the given address in memory.","","Read a word (little-endian) from the given address in …","","","","Execute a single instruction.","","","","","","Write a byte to the given address in memory.","","Write a word (little-endian) to the given address in …","","","","","","","A factory for creating a system from a set of ROM files …","","","","","","","","","A system which only operates in text mode, for basic …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","A port of the “Easy6502” system from …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","A system used to run Klaus Dormann’s 6502 CPU test suite.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Port A on the first PIA. This is used for generating the …","Port B on the first PIA. This is used for reading the …","The Commodore PET system.","The set of ROM files required to run a PET system.","Commodore PET-style column screen memory. This is a 40x25 …","Basic ROM. Contains the BASIC interpreter.","","","","","","","","","","","Character ROM. Used to generate the 8x8 character bitmaps.","","","","","","","Editor ROM. Contains the screen editor functions.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Kernal ROM. Contains the operating system.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The VIC-20 system by Commodore.","The set of ROM files required to run a VIC-20 system.","Port A on the second VIA chip. This is used to read the …","Port B on the second VIA chip. This is used to set the …","Basic ROM. Contains the BASIC interpreter.","","","","","","","","","Character ROM. Used to generate the 8x8 character bitmaps.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Load the ROM files from files.","Return a reference to the keyboard column’s current …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Kernal ROM. Contains the operating system and editor …","","Create a new instance of the port, with the given keyboard …","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,9,0,9,9,0,0,0,0,3,4,7,9,8,3,4,7,9,8,8,8,3,4,7,9,8,3,4,7,9,8,3,3,4,7,9,8,4,4,7,0,5,3,4,7,0,3,5,3,4,7,5,3,4,7,3,3,4,7,9,8,3,4,7,9,8,3,4,7,9,8,3,4,7,9,8,0,3,4,7,9,8,7,5,3,4,7,0,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,18,18,18,18,18,18,16,18,16,18,16,18,18,18,18,18,18,18,16,18,0,20,20,20,20,20,20,20,20,20,0,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,25,29,26,21,22,28,25,29,26,21,22,21,22,21,22,28,25,29,26,21,22,21,22,21,22,28,25,29,26,21,22,35,25,26,35,25,26,28,25,29,26,21,22,35,25,26,28,25,29,26,21,22,35,25,26,48,28,29,35,25,26,35,25,26,49,28,29,50,0,35,25,26,21,22,21,21,28,25,29,26,21,22,28,25,29,26,21,22,28,25,29,26,21,22,28,25,29,26,21,22,28,25,29,26,21,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,51,2,2,2,2,2,2,2,2,2,0,0,0,0,36,36,36,36,36,52,36,36,36,53,36,53,36,53,36,53,36,54,36,54,36,36,36,36,36,36,36,36,36,54,36,54,36,0,0,0,0,0,0,0,0,0,55,0,0,0,0,0,56,56,56,56,56,56,56,56,56,56,56,0,57,57,57,57,57,57,57,57,57,57,57,0,58,58,58,58,58,58,58,58,58,58,58,0,0,0,0,0,41,43,42,44,41,59,43,42,44,41,59,41,59,43,42,44,41,59,41,43,42,44,41,59,41,42,43,42,44,41,59,41,43,42,44,43,42,44,43,42,44,43,42,44,43,42,44,41,59,43,42,44,41,59,43,42,44,41,59,43,42,44,41,59,43,42,44,41,59,43,42,44,0,0,0,0,45,45,46,47,60,45,46,47,60,45,60,45,46,47,60,45,46,47,60,45,46,45,46,47,60,45,46,47,46,47,46,47,46,47,45,46,47,60,45,46,47,60,45,46,47,60,45,46,47,60,45,46,47,60,46,47],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,2],3],[[]],[[]],[[]],[[]],[[]],[[4,1,[6,[5]]],4],[[],4],[[],7],0,[8,9],[[3,8],9],[[4,8],9],[[7,8],9],0,[1,3],[10,11],[[3,10],11],[[4,10],11],[[7,10],11],[[]],[3],[4],[7],[1,3],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],[15,7],[[10,11]],[[3,10,11]],[[4,10,11]],[[7,10,11]],0,[[]],[[]],0,[[]],[[]],[[]],[[[6,[16]],[6,[16]]],17],[[17,8],9],[[17,10],11],[17],[[],12],[[],12],[[],13],[[],14],[[]],[[17,10,11]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[],18],[8,19],[[18,8],19],[[],11],[18,11],[[]],[18],[[],12],[[],12],[[],13],[[],14],[[]],[15,18],[11],[[18,11]],0,[[]],[[]],[[]],[[]],[[]],[[[6,[16]],[6,[16]]],20],[[20,8],9],[[20,10],11],[20],0,[[],12],[[],12],[[],13],[[],14],[[]],[[20,10,11]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,21],[22,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[21,21],19],[[22,22],19],[[21,23],24],[[22,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[25,11],[26,11],[[],27],[25,27],[26,27],[[]],[[]],[[]],[[]],[[]],[[]],[11,19],[[25,11],19],[[26,11],19],[[],28],[[],25],[[],29],[[[31,[[30,[[14,[22]]]]]],[31,[[30,[[14,[32]]]]]],[31,[[30,[19]]]],[31,[30]],[31,[[30,[11]]]]],26],[[11,11,11],21],[[33,33,34],22],[15],[[25,15]],[[26,15]],[[],[[31,[35]]]],[28,[[31,[35]]]],[29,[[31,[35]]]],[[],11],[25,11],[26,11],[22],[[25,22]],[[26,22]],[36],[[28,36]],[[29,36]],[36,[[38,[[6,[37]]]]]],0,[[33,33,21]],[[25,33,33,21]],[[26,33,33,21]],[[]],[[]],[21,33],[21],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[15],[15,2],[2,[[39,[11]]]],[[]],[[[39,[11]]],2],[[],12],[[],12],[[],13],[[],14],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[36,8],[[19,19]],[[36,19,19]],[[]],[[[6,[5]],40],36],[[],11],[36,11],[[],10],[36,10],[11],[[36,11]],[10],[[36,10]],[10,11],[[36,10],11],[10,10],[[36,10],10],0,[36],[36,34],[[],12],[[],12],[[],13],[[],14],[[]],[[10,11]],[[36,10,11]],[[10,10]],[[36,10,10]],0,0,0,0,0,0,0,0,0,[[[31,[35]]],36],0,0,0,0,0,[[]],[[]],[[2,[31,[35]]],36],[[]],[[]],[[]],[[],12],[[],12],[[],13],[[],14],[[]],0,[[]],[[]],[[2,[31,[35]]],36],[[]],[[]],[[]],[[],12],[[],12],[[],13],[[],14],[[]],0,[[]],[[]],[[2,[31,[35]]],36],[[]],[[]],[[]],[[],12],[[],12],[[],13],[[],14],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[41,[31,[35]]],36],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[],41],[42,[[31,[[30,[11]]]]]],[[]],[[]],[[]],[[]],[[]],0,[[2,[31,[35]]],43],[[],42],[[[31,[[30,[11]]]],[31,[35]]],44],[[43,8],9],[[42,8],19],[[44,8],19],[[43,10],11],[42,11],[44,11],[43],[42],[44],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[43,10,11]],[[42,11]],[[44,11]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[45,[31,[35]]],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],45],[46,[[31,[[30,[11]]]]]],[[]],[[]],[[]],[[]],0,[[],46],[[[31,[[30,[11]]]],[31,[35]]],47],[[46,8],19],[[47,8],19],[46,11],[47,11],[46],[47],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[46,11]],[[47,11]]],"p":[[15,"usize"],[3,"RomFile"],[3,"BlockMemory"],[3,"BranchMemory"],[8,"Memory"],[3,"Box"],[3,"NullMemory"],[3,"SystemInfo"],[4,"ActiveInterrupt"],[15,"u16"],[15,"u8"],[4,"Result"],[3,"TypeId"],[4,"Option"],[15,"str"],[8,"Port"],[3,"PIA"],[3,"NullPort"],[15,"bool"],[3,"VIA"],[3,"Color"],[3,"WindowConfig"],[3,"Formatter"],[6,"Result"],[3,"TextPlatformProvider"],[3,"WinitPlatformProvider"],[3,"String"],[3,"TextPlatform"],[3,"WinitPlatform"],[3,"Mutex"],[3,"Arc"],[3,"Pixels"],[15,"u32"],[15,"f64"],[8,"PlatformProvider"],[3,"System"],[8,"Future"],[3,"Pin"],[3,"Vec"],[15,"u64"],[3,"PetSystemRoms"],[3,"PetPia1PortA"],[3,"PetVram"],[3,"PetPia1PortB"],[3,"Vic20SystemRoms"],[3,"VicVia2PortB"],[3,"VicVia2PortA"],[8,"Platform"],[8,"SyncPlatform"],[8,"AsyncPlatform"],[8,"DiskLoadable"],[8,"InterruptHandler"],[8,"Stack"],[8,"MemoryIO"],[8,"SystemFactory"],[3,"BrookeSystemFactory"],[3,"EasySystemFactory"],[3,"KlausSystemFactory"],[3,"PetSystemFactory"],[3,"Vic20SystemFactory"]]},\
"noentiendo_desktop":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,11,11,11,11,11,11,11],"n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","downcast","fmt","from","from_arg_matches","from_arg_matches_mut","into","into_app","into_app_for_update","main","platform","rom_path","system","try_from","try_into","type_id","upcast","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":["noentiendo_desktop","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2],"f":[0,[1,1],[1,1],[[]],[[]],[[]],[[2,3],4],[[]],[5,[[7,[2,6]]]],[5,[[7,[2,6]]]],[[]],[[],1],[[],1],[[]],0,0,0,[[],7],[[],7],[[],8],[[],9],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],[[]]],"p":[[6,"Command"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Error"],[4,"Result"],[3,"TypeId"],[4,"Option"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
